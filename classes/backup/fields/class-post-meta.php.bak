<?php

	private $thumbnail_size = 'thumbnail';

		foreach ( $metabox->post_types as $post_type ) {
			add_filter( "get_{$post_type}_metadata", array( $this, 'get_rest_metadata' ), 15, 4 );
		}

	public function get_value( $post_id ) {
		$value = get_post_meta( $post_id, $this->get_id(), true );

		if ( 'checkbox' === $this->type ) {
			$value = boolval( $value );
		}

		return $value;
	}

	public function register_meta() {
		register_meta(
			'post',
			$this->get_id(),
			array(
				'show_in_rest' => $this->show_in_rest,
				'single'       => true,
				'type'         => 'checkbox' === $this->type ? 'boolean' : 'string',
			)
		);
	}

	public function get_rest_metadata( $value, $object_id, $meta_key, $single ) {
		if ( ! defined( 'REST_REQUEST' ) || ! REST_REQUEST ) {
			return $value;
		}

		if ( $meta_key != $this->get_id() ) {
			return $value;
		}

		if ( ! in_array( $this->type, array( 'file' ) ) ) {
			return $value;
		}

		$meta_cache = wp_cache_get( $object_id, 'post_meta' );

		if ( ! $meta_cache ) {
			$meta_cache = update_meta_cache( 'post', array( $object_id ) );
			$meta_cache = $meta_cache[ $object_id ];
		}

		if ( ! isset( $meta_cache[ $this->get_id() ] ) ) {
			return $value;
		}

		if ( 'file' === $this->type ) {
			$value = wp_get_attachment_image_src( (int) $meta_cache[ $this->get_id() ][0], $this->thumbnail_size );
		}

		return $value;
	}
